version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"  # AMQP port (default)
      - "15672:15672"  # Management UI port (default)
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitscout:
    image: ghcr.io/ralve-org/rabbitscout:latest
    ports:
      - "3006:3000"  # Changed to 3006 to avoid conflict; RabbitScout default port inside container is 3000
    environment:
      - NEXT_PUBLIC_RABBITMQ_HOST=rabbitmq
      - NEXT_PUBLIC_RABBITMQ_PORT=15672
      - NEXT_PUBLIC_RABBITMQ_VHOST=/
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - NEXT_PUBLIC_API_URL=http://localhost:3006  # Updated to match the new host port (3006)
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3007:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - IDENTITY_SERVICE_URL=http://identity-service:3001
      - POST_SERVICE_URL=http://post-service:3002
      - MEDIA_SERVICE_URL=http://media-service:3003
      - SEARCH_SERVICE_URL=http://search-service:3004
      - RESUME_SERVICE_URL=http://resume-parser-service:3005
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
    depends_on:
      redis:
        condition: service_healthy
      identity-service:
        condition: service_started
      post-service:
        condition: service_started
      media-service:
        condition: service_started
      search-service:
        condition: service_started
    networks:
      - microservices-network
    env_file:
      - ./api-gateway/.env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  identity-service:
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - microservices-network
    env_file:
      - ./identity-service/.env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network
    env_file:
      - ./post-service/.env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  media-service:
    build:
      context: ./media-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network
    env_file:
      - ./media-service/.env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  search-service:
    build:
      context: ./search-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - microservices-network
    env_file:
      - ./search-service/.env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  resume-parser-service:
    build:
      context: ./resume-parser-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - NODE_ENV=development
      - MONGODB_URI=mongodb://host.docker.internal:27017/resume-parser
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - redis
      - rabbitmq
    networks:
      - microservices-network
    env_file:
      - ./resume-parser-service/.env
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - microservices-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  microservices-network:
    driver: bridge

volumes:
  redis-data: